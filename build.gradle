plugins {
	id 'com.github.kt3k.coveralls' version '2.6.3'
	id 'org.sonarqube' version '2.6'
}
apply plugin: 'java'
apply plugin: 'jacoco'

repositories {
    jcenter()
}

sourceCompatibility = 1.7
targetCompatibility = 1.7
version = '1.0.0'

project.ext.jsonSimpleVersion = '1.1.1'
project.ext.gsonVersion = '2.8.5'
project.ext.jacksonVersion = '2.9.7'

test {
	testLogging {
		showStandardStreams = true
		events "passed", "skipped", "failed"
	}
}

dependencies {
    compileOnly group: 'com.googlecode.json-simple', name: 'json-simple', version: jsonSimpleVersion
	compileOnly group: 'com.google.code.gson', name: 'gson', version: gsonVersion
	compileOnly group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

// Configurations for tests
configurations {
	jsonSimpleTestCompile.extendsFrom testCompile
	jsonSimpleTestCompileOnly.extendsFrom compileOnly
	gsonTestCompile.extendsFrom testCompile
	gsonTestCompileOnly.extendsFrom compileOnly
	jacksonTestCompile.extendsFrom testCompile
	jacksonTestCompileOnly.extendsFrom compileOnly
	customJsonTestCompile.extendsFrom testCompile
	customJsonTestCompileOnly.extendsFrom compileOnly
}

// sourceSets for tests
sourceSets {
    jsonSimpleTest {
    	java {
            srcDirs = [
                "$projectDir/src/main/java",
                "$projectDir/src/test/java"
            ]
            exclude '**/GSONFormatterTest.java'
            exclude '**/JacksonFormatterTest.java'
            exclude '**/CustomJsonConverterTest.java'
        }
		resources.srcDir file('src/test/resources')
    }
    
    gsonTest {
    	java {
            srcDirs = [
                "$projectDir/src/main/java",
                "$projectDir/src/test/java"
            ]
            exclude '**/JSONSimpleFormatterTest.java'
            exclude '**/JacksonFormatterTest.java'
            exclude '**/CustomJsonConverterTest.java'
        }
		resources.srcDir file('src/test/resources')
    }
    
    jacksonTest {
    	java {
            srcDirs = [
                "$projectDir/src/main/java",
                "$projectDir/src/test/java"
            ]
            exclude '**/JSONSimpleFormatterTest.java'
            exclude '**/GSONFormatterTest.java'
            exclude '**/CustomJsonConverterTest.java'
        }
		resources.srcDir file('src/test/resources')
    }
    
    customJsonTest {
    	java {
            srcDirs = [
                "$projectDir/src/main/java",
                "$projectDir/src/test/java"
            ]
            exclude '**/JSONSimpleFormatterTest.java'
            exclude '**/GSONFormatterTest.java'
            exclude '**/JacksonFormatterTest.java'
        }
		resources.srcDir file('src/test/resources')
    }
}

// Test configuration dependencies
dependencies {
	jsonSimpleTestCompile group: 'com.googlecode.json-simple', name: 'json-simple', version: jsonSimpleVersion
	gsonTestCompile group: 'com.google.code.gson', name: 'gson', version: gsonVersion
	jacksonTestCompile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
}

/** Test tasks **/
task jsonSimpleTest(type: Test) {
	description = "Test json-simple"
    testClassesDirs = project.sourceSets.jsonSimpleTest.output.classesDirs
	classpath = project.sourceSets.jsonSimpleTest.runtimeClasspath
}

task gsonTest(type: Test) {
	description = "Test gson"
    testClassesDirs = project.sourceSets.gsonTest.output.classesDirs
	classpath = project.sourceSets.gsonTest.runtimeClasspath
}

task jacksonTest(type: Test) {
	description = "Test jackson"
    testClassesDirs = project.sourceSets.jacksonTest.output.classesDirs
	classpath = project.sourceSets.jacksonTest.runtimeClasspath
}

task customJsonTest(type: Test) {
	description = "Test custom JSON"
    testClassesDirs = project.sourceSets.customJsonTest.output.classesDirs
	classpath = project.sourceSets.customJsonTest.runtimeClasspath
}

/** Jacoco report task for custom test tasks **/
task combinedJacocoReport(type: JacocoReport) {
	dependsOn tasks.withType(Test)
	sourceSets sourceSets.main
	executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
   
	reports {
		xml.enabled true
		csv.enabled false
		html.enabled true
		xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
		html.destination file("${buildDir}/reports/jacoco")
	}
}

sonarqube {
    properties {
        property 'sonar.jacoco.reportPaths', 'build/jacoco/customJsonTest.exec,build/jacoco/gsonTest.exec,build/jacoco/jacksonTest.exec,build/jacoco/jsonSimpleTest.exec'
        property 'sonar.junit.reportPaths', 'build/test-results/customJsonTest,build/test-results/gsonTest,build/test-results/jacksonTest,build/test-results/jsonSimpleTest'
    }
}

check.dependsOn jsonSimpleTest
check.dependsOn gsonTest
check.dependsOn jacksonTest
check.dependsOn customJsonTest
check.dependsOn combinedJacocoReport