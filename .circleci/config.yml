version: 2
jobs:
  test:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/jul-jsonformatter
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run: |
          ./gradlew check coveralls -x test
      - store_test_results:
          path: build/test-results
  build:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/jul-jsonformatter
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run: ./gradlew build artifactoryPublish coveralls sonarqube -Dsnapshot=true -Dsonar.login=$SONAR_TOKEN -x test
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - store_artifacts:
          path: build/libs
      - store_artifacts:
          path: build/reports/tests
      - store_artifacts:
          path: build/reports/jacoco    
      - store_test_results:
          path: build/test-results
  publish:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/jul-jsonformatter
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run: ./gradlew build bintrayUpload -x test
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}           
  sync:
    docker:
    - image: devatherock/git-sync:1.0.0
    working_directory: ~/jul-jsonformatter
    environment:
      PLUGIN_TARGET_REPO: "git@bitbucket.org:devaprasadh/julid 'com.github.kt3k.coveralls' version '2.6.3'-jsonformatter.git"  
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "11:4f:6c:a3:16:52:98:03:17:30:39:f8:2a:38:50:bc"
      - run: sh /scripts/entry-point.sh
           
workflows:
  version: 2
  build_test:
    jobs:
      - test:
          filters:
            branches:
              ignore: 
                - master
      - build:
          filters:
            branches:
              only: master
      - sync:
          requires:
            - build
  publish_artifacts:
    jobs:
      - publish:
          filters:
            branches:
              only: non-existent-branch
            tags:
              only: /^v[0-9\.]+.*$/                                   
