openjdk_image: &openjdk_image
  docker:
    - image: openjdk:11-slim
      auth:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD

slack_image: &slack_image
  docker:
    - image: devatherock/simple-slack:0.4.0
      auth:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD

work_directory: &work_directory
  working_directory: ~/jul-jsonformatter

resource_class: &resource_class
  resource_class: small

version: 2.1
jobs:
  test:
    <<: *openjdk_image
    <<: *resource_class
    <<: *work_directory
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run: |
          ./gradlew check coveralls -x test
      - store_test_results:
          path: build/test-results

  build:
    <<: *openjdk_image
    <<: *resource_class
    <<: *work_directory
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run: ./gradlew build artifactoryPublish coveralls sonarqube -Dsnapshot=true -Dsonar.login=$SONAR_TOKEN -x test
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - store_artifacts:
          path: build/libs
      - store_artifacts:
          path: build/reports/tests
      - store_artifacts:
          path: build/reports/jacoco    
      - store_test_results:
          path: build/test-results

  publish:
    <<: *openjdk_image
    <<: *resource_class
    <<: *work_directory
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run: ./gradlew build bintrayUpload -x test
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

  notify_success:
    <<: *slack_image
    <<: *resource_class
    environment:
      TEXT: "Success: {{.CircleBuildUrl}} by {{.CircleUsername}}"
      COLOR: "#33ad7f"
      CHANNEL: general
      TITLE: "Build completed"
    steps:
      - run: /bin/simpleslack
  notify_failure:
    <<: *slack_image
    <<: *resource_class
    environment:
      TEXT: "Failure: {{.CircleBuildUrl}} by {{.CircleUsername}}"
      COLOR: "#a1040c"
      CHANNEL: general
      TITLE: "Build completed"
    steps:
      - run:
          name: Failure notification
          command: /bin/simpleslack
          when: on_fail
           
workflows:
  version: 2.1
  build_test:
    jobs:
      - test:
          context:
            - docker-credentials
          filters:
            branches:
              ignore: 
                - master
      - build:
          context:
            - docker-credentials
            - bintray-credentials
            - sonar-credentials
          filters:
            branches:
              only: master
      - notify_success:
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - build
      - notify_failure:
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - build
  publish_artifacts:
    jobs:
      - publish:
          context:
            - docker-credentials
            - bintray-credentials
            - sonatype-credentials
          filters:
            branches:
              only: non-existent-branch
            tags:
              only: /^v[0-9\.]+$/                                   
      - notify_success:
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - publish
      - notify_failure:
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - publish