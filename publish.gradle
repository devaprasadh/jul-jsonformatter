task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
artifacts {
    archives sourcesJar
    archives javadocJar
}

def pomConfig = {
    licenses {
        license {
            name 'MIT License'
            url 'https://github.com/devatherock/jul-jsonformatter/blob/master/LICENSE.txt'
        }
    }

    developers {
        developer {
            id 'devatherock'
            name 'Devaprasadh Xavier'
            email 'devatherock@gmail.com'
        }
    }

    scm {
        url 'https://github.com/devatherock/jul-jsonformatter/'
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            groupId "${project.group}"
            artifactId "${project.name}"
            artifact "${buildDir}/libs/${project.name}-${project.version}.jar"
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'java.util.logging.Formatter to log messages as JSON, compatible with Logstash')
                root.appendNode('name', "${project.name}")
                root.appendNode('url', 'https://github.com/devatherock/jul-jsonformatter')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = System.env.BINTRAY_USERNAME
    key = System.env.BINTRAY_KEY
    publications = ['mavenPublication']

    pkg {
        repo = "${project.name}"
        name = "${project.name}"
        userOrg = 'devatherock'
        licenses = ['MIT License']
        vcsUrl = 'https://github.com/devatherock/jul-jsonformatter.git'
        version {
            name = "${project.version}"
            desc = "${project.version}"
            released  = new Date()
        }
    }
}
bintrayUpload.dependsOn build